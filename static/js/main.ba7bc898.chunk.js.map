{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","todos","setTodos","_useState3","_useState4","todoEditing","setTodoEditing","useEffect","json","localStorage","getItem","loadedTodo","JSON","parse","length","stringify","setItem","react_default","a","createElement","className","type","align","id","onClick","e","preventDefault","todo","document","getElementById","value","newTodo","Date","getTime","text","trim","completed","toConsumableArray","concat","alert","map","key","checked","onChange","updatedTodos","toggleComplete","defaultValue","newtodo","submitEdits","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.ba7bc898.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoEditing, setTodoEditing] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"todos\")\r\n    const loadedTodo = JSON.parse(json)\r\n    if (loadedTodo) {\r\n      setTodos(loadedTodo)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (todos.length > 0) {\r\n      const json = JSON.stringify(todos)\r\n      localStorage.setItem(\"todos\", json)\r\n    }\r\n  }, [todos])\r\n\r\n  // Add the handlesubmit code here\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    let todo = document.getElementById(\"todoAdd\").value\r\n    const newTodo = {\r\n      id : new Date().getTime(),\r\n      text : todo.trim(),\r\n      completed: false\r\n    }\r\n\r\n    if (newTodo.text.length > 0) {\r\n      setTodos([...todos].concat(newTodo))\r\n    } else {\r\n      alert(\"Enter valid Task\")\r\n    }\r\n\r\n    document.getElementById(\"todoAdd\").value = \"\"\r\n  } \r\n  \r\n  // Add the deleteToDo code here\r\n  function deleteTodo(id) {\r\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id)\r\n    setTodos(updatedTodos)\r\n\r\n}  \r\n  \r\n  // Add the toggleComplete code here\r\n  function toggleComplete(id) {\r\n    let updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n  \r\n  // Add the submitEdits code here\r\n  function submitEdits(newtodo) {\r\n    const updatedTodos = [...todos].map((todo) => {\r\n      if (todo.id === newtodo.id) {\r\n        todo.text = document.getElementById(newtodo.id).value\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(updatedTodos)\r\n    setTodoEditing(null)\r\n  }\r\n\r\n  \r\nreturn(\r\n<div className =\"App\">\r\n  <h1>Todo List</h1>\r\n  <form>\r\n    <input type =\"text\" align =\"right\" id= 'todoAdd'/>\r\n    <button type =\"submit\" onClick={handleSubmit}>Add Todo</button>\r\n  </form>\r\n  {\r\n    todos.map((todo) => \r\n      <div className=\"todo\" key={todo.id}>  \r\n          <div className=\"todo-text\">\r\n            {/* checkbox */}\r\n            <input type=\"checkbox\" id=\"completed\" checked={todo.completed} onChange={ () => toggleComplete(todo.id)} />\r\n            {/* edit */}\r\n            {todo.id === todoEditing ?\r\n              (<input\r\n                type=\"text\"\r\n                id={todo.id}\r\n                defaultValue={todo.text} \r\n                />) :\r\n                (<div>{todo.text}</div>)\r\n            }\r\n          </div>     \r\n          <div className=\"todo-actions\">\r\n            {todo.id === todoEditing ?\r\n              (\r\n                <button onClick={() => submitEdits(todo)}>Submit Edits</button>\r\n              ) :\r\n              (\r\n                <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\r\n              )\r\n            }\r\n\r\n\r\n            <button onClick={ () => deleteTodo(todo.id)}>Delete</button>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n</div>\r\n);\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}